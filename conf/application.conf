
netlogo {
  # must be at least 1
  concurrent-headless-environments = 1
  # name of reporter used to calculate the rewards for choices
  reward-reporter-name = "get-reward"
  # name of reporter used to define the group structure
  group-reporter-name = "get-groups"
  # 
  #pause_between_choice_ms = 100
}


akka {
  loglevel = DEBUG
 # loglevel = INFO
  daemonic = off
  actor {
    debug {
      lifecycle = on
      event-stream = on
      fsm = on
    }
    deployment {
      /NetLogoActors {
        router = "smallest-mailbox"
        resizer {
          lower-bound = 4
          upper-bound = 10
        }
      }
    }
  }
  
  actor.default-dispatcher.throughput = 1
}

netlogo-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = PinnedDispatcher
  # What kind of ExecutionService to use
  # PinnedDispatcher must be used toghether with executor=thread-pool-executor.
  executor = "thread-pool-executor"
  
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 8
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 3.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 64
  }
  
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

