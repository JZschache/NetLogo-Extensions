
netlogo {
  # number of concurrently working headless NetLogo workspaces
  # must be at least 1, there may be a maximum (depends on number of threads available - see default-dispatcher)
  # it makes little sense to use many headless NetLogos if they cannot work concurrently
  headless-workspaces = 4
  
  # NetLogo needs to block until data (list of NLGroupChoices) has arrived
  # this timeout (in milliseconds) may be set to higher values
  timeout_ms = 10000
  
  # name of reporter used to calculate the rewards for choices
  reward-reporter-name = "get-rewards"
  # name of reporter that can be used to define a dynamic group structure
  group-reporter-name = "get-groups"
  # name of command used to update after each tick
  update-command-name = "update"

  # name of alternatives list
  alternatives-list = "alternatives"
  # name of Q-values list
  q-values-list = "q-values"
  # name of frequencies list
  frequencies-list = "frequencies"
  # name of exploration rates list
  explorations-list = "explorations"
  
  additional-jars = ["extensions/games/games.jar",
                     "extensions/games/gamut.jar"] 
}

akka {

  default-dispatcher {
    
    executor = "fork-join-executor"

    # This will be used if you have set "executor = "fork-join-executor""
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 8

      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 3.0

      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 32
    }
      
    throughput = 5
  }
  
}